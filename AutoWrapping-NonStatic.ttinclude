<#@ IntelliSenseLanguage processor="tangibleT4Editor" language="C#" #>
<#+
  private void GenerateNonAbstractClassInterface(Type type, bool multipleFiles)
  {
    if(multipleFiles)
	{
		GenerateGlobalUsingStatements();
	}
  #>
	namespace <#= type.Namespace #>
	{
		public interface <#= InterfaceName(type) #> : Sitecore.Abstraction.IAutoWrappedObject<<#=  GetCSharpTypeName(type) #>>
		{
			// Instance Properties
			<#+ foreach (var property in type.GetProperties(BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly)) { #>
					<#= GetCSharpTypeNameWithTranslation(property.PropertyType) #> <#= property.Name #> { <#= property.GetGetMethod() != null ? "get;" : "" #> <#= property.GetSetMethod() != null ? "set;" : "" #>  }
			<#+ } #>

					// Instance Methods
			<#+ foreach (MethodInfo method in type.GetMethods(BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly).Where(m => !m.IsSpecialName)) 
			{ 
				PushIndent("        ");
				WriteInterfaceMethodDeclaration(method);
				ClearIndent();
			} #>
		}
	}
<#+
	if(multipleFiles)
    {
		SaveOutput(InterfaceName(type) + ".cs");
    }
  }

  private void GenerateNonAbstractClassWrapper(Type type, bool multipleFiles)
  {
    	if(multipleFiles)
		{
			GenerateGlobalUsingStatements();
		}
	#>
namespace <#= type.Namespace #>
{
	public class <#= WrapperClassName(type) #> : <#= InterfaceName(type) #>
	{
		public <#= WrapperClassName(type) #>(<#=  GetCSharpTypeName(type) #> innerObject)
		{
			InnerWrappedObject = innerObject;
		}

		public <#=GetCSharpTypeName(type) #> InnerWrappedObject{ get; private set;}

		// Instance Properties
		<#+ 
		PushIndent("        ");
		foreach (var property in type.GetProperties(BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly)) 
		{
			WriteClassPropertyDeclaration(property, type);
		} #>

		// Instance Methods
		<#+ foreach (MethodInfo method in type.GetMethods(BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly).Where(m => !m.IsSpecialName)) 
		{ 
			WriteClassMethodDeclaration(method);
		} 
		ClearIndent();
		#>
	}
}
<#+
	if(multipleFiles)
    {
		SaveOutput(WrapperClassName(type) + ".cs");
    }
  }
#>